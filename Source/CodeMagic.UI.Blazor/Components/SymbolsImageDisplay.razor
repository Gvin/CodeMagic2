@using System.Drawing
@using CodeMagic.Game.Images

@if (Model != null)
{
	<div class="symbols-image-display">
		@for (var y = 0; y < Model.Height; y++)
		{
			<div class="pixels-row">
				@for (var x = 0; x < Model.Width; x++)
				{
					<div class="pixel"><p style="color: @GetColor(Model[x,y]); background-color: @GetBackgroundColor(Model[x,y])">@GetSymbol(Model[x, y])</p></div>
				}
			</div>
		}
	</div>
}

@code {

	[Parameter]
	public ISymbolsImage? Model
	{
		get => _model;
		set
		{
			_model = value;
			StateHasChanged();
		}
	}

	[Parameter]
	public Color? BackgroundColor
	{
		get => _backgroundColor;
		set
		{
			_backgroundColor = value;
			StateHasChanged();
		}
	}

	private ISymbolsImage? _model;
	private Color? _backgroundColor;

	private string GetColor(SymbolsImage.Pixel? pixel)
	{
		return (pixel?.Color).ToStyleString();
	}

	private string GetBackgroundColor(SymbolsImage.Pixel? pixel)
	{
		return pixel?.BackgroundColor == null ? BackgroundColor.ToStyleString() : (pixel?.BackgroundColor).ToStyleString();
	}

	private string GetSymbol(SymbolsImage.Pixel? pixel)
	{
		return pixel?.Symbol?.ToString() ?? " ";
	}
}
