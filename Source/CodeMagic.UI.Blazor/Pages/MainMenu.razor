@using CodeMagic.UI.Blazor.Components
@using CodeMagic.UI.Blazor.Models
@using CodeMagic.UI.Presenters

@inject ILogger<MainMenu> _logger;

<div class="main-menu">
	<div class="content">

		<div class="logo">

		</div>

		<div class="menu">
			@if (ShowContinueButton)
			{
				<div class="menu-button">
					<Button Text="C0ntinue Game" OnClick="HandleContunieGameClick"></Button>
				</div>
			}
			<div class="menu-button">
				<Button Text="Start Game" OnClick="HandleStartGameClick"></Button>
			</div>
			<div class="menu-button">
				<Button Text="Spe11 Library" OnClick="HandleShowSpellLibraryClick"></Button>
			</div>
			<div class="menu-button">
				<Button Text="Settings" OnClick="HandleSettingsClick"></Button>
			</div>
		</div>

	</div>
</div>

@code {

	[Parameter]
	public MainMenuModel? Model
	{
		get => _model;
		set
		{
			if (_model != null)
			{
				_model.ContinueOptionChanged -= ModelOnContinueOptionChanged;
			}

			_model = value;

			if (_model != null)
			{
				_model.ContinueOptionChanged += ModelOnContinueOptionChanged;
			}
		}
	}

	private bool ShowContinueButton => Model?.ShowContinueButton ?? false;

	private void ModelOnContinueOptionChanged(object? sender, EventArgs args)
	{
		StateHasChanged();
	}

	private void HandleStartGameClick(MouseEventArgs args)
	{
		Model?.OnStartGame();
	}

	private void HandleContunieGameClick(MouseEventArgs args)
	{
		Model?.OnContinueGame();
	}

	private void HandleShowSpellLibraryClick(MouseEventArgs args)
	{
		Model?.OnShowSpellLibrary();
	}

	private void HandleSettingsClick(MouseEventArgs args)
	{
		Model?.OnShowSettings();
	}

	private MainMenuModel? _model;
}
